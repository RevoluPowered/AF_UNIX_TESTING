#ifndef GENERIC_IPC_HANDLER_SOCKET_IMPLEMENTATION_H#define GENERIC_IPC_HANDLER_SOCKET_IMPLEMENTATION_H#include <stddef.h>struct SocketImplementation{    void initialize();    void finalize();    int create_af_unix_socket( const char * file_path, int n);    /*     * Sets the socket into non-blocking mode for read/write operations     * listen() is non-blocking on Linux but not on Mac, on Mac you must poll() first.     * Windows has a different handler for setting the socket to non-blocking     * Unix, Linux and Mac uses fcntl.    */    int set_non_blocking( int socket_handle );    int connect( int socket_handle, const struct socketaddr * name, size_t name_length );    int send( int socket_handle, const char * msg, size_t len);    int recv( int socket_handle, char * buffer, size_t &len );    int poll( int socket_handle );    int accept( int socket_handle, const struct sockaddr *addr, size_t len);    int bind( int socket_handle, const struct sockaddr *addr, size_t len);    int listen( int socket_handle, int connection_pool_size);    void close( int socket_handle );};#endif //GENERIC_IPC_HANDLER_SOCKET_IMPLEMENTATION_H